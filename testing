while ((centerCardCount > 0) && (playerCardCount1 > 0) && (playerCardCount2 > 0)) {
			int howMany = 0, card1 = 0, card2 = 0, card1Val = 0, card2Val = 0, trueOrFalse = 0, currentCard = 1;
			char comma;
			card* tmp;
			if (turnCount % 2 == 1) {
				printf("Player 1's cards: ");
				card_Print(currObj, headObj);
			}
			else {
				printf("Player 2's cards: ");
				card_Print(currObj2, headObj2);
			}
			printf("Centerline ");
			card_Print(currObj3, headObj3);
			currObj3 = headObj3;
			for (int i = 0; i < currentCard; ++i) {
				currObj3 = currObj3->pt;
			}
			printf("How many cards do you want to play on %s %d:", currObj3->color, currObj3->value);
			scanf("%d", &howMany);
			if (howMany == 1) {
				printf("Select a card from 1-%d:", card_Count(currObj, headObj));
				scanf("%d", &card1);
				card2 = 0;
			}
			if (howMany == 2) {
				printf("Select two cards from 1-%d (x,y):", card_Count(thisnode, headnode));
				scanf("%d%c%d", &card1, &comma, &card2);
			}
			thisnode = headnode;
			for (int i = 0; i < card1 - 1; ++i) {
				thisnode = thisnode->pt;
			}
			card1Val = thisnode->value;
			thisnode = headnode;
			for (int i = 0; i < card2 - 1; ++i) {
				thisnode = thisnode->pt;
			}
			card2Val = thisnode->value;
			if (howMany == 1) {
				card2Val = 0;
			}
			centernode = centernodehead;
			trueOrFalse = card_GetMatch(centernode, card1Val, card2Val);
			if (trueOrFalse == 0) {
				printf("The selection does not total to the center row card. Select again\n");
			}
			if ((trueOrFalse == 1) && (*turncount % 2 == 1)) {
				printf("Player 1's cards: ");
				if (howMany == 2) {
					card_Release(&thisnode, &headnode, card2);
					card_Release(&thisnode, &headnode, card1);
					card_Release(&centernode, &centernodehead, currentCard);
					if (card_Count(centernode, centernodehead) == 1) {
						currentCard == 1;
					}
					else if (card_Count(centernode, centernodehead) != 1) {
						currentCard = currentCard + 1;
					}
				}
				else if (howMany == 1) {
					card_Release(&thisnode, &headnode, card1);
					card_Release(&centernode, &centernodehead, currentCard);
					card_Release(&centernode, &centernodehead, currentCard);
					if (card_Count(centernode, centernodehead) == 1) {
						currentCard == 1;
					}
					else if (card_Count(centernode, centernodehead) != 1) {
						currentCard = currentCard + 1;
					}
				}
			}
			else if ((trueOrFalse == 1) && (*turncount % 2 == 0)) {
				printf("Player 2's cards: ");
				if (howMany == 2) {
					card_Release(&thisnode, &headnode, card2);
					card_Release(&thisnode, &headnode, card1);
					card_Release(&centernode, &centernodehead, currentCard);
					if (card_Count(centernode, centernodehead) == 1) {
						currentCard == 1;
					}
					else if (card_Count(centernode, centernodehead) != 1) {
						currentCard = currentCard + 1;
					}
				}
				else if (howMany == 1) {
					card_Release(&thisnode, &headnode, card1);
					card_Release(&centernode, &centernodehead, currentCard);
					if (card_Count(centernode, centernodehead) == 1) {
						currentCard == 1;
					}
					else if (card_Count(centernode, centernodehead) != 1) {
						currentCard = currentCard + 1;
					}
				}
			}
			card_Print(thisnode, headnode);
			card_Print(centernode, centernodehead);
		}
	}
